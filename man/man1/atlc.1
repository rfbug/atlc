.TH atlc 1 "atlc-4.4.2 10th Sept 2003" "Dr. David Kirkby"
.ds n 5
.SH NAME
\fBatlc\fR - an Arbitrary Transmission Line Calculator
.SH SYNOPSIS
\fBatlc  [-C] [-s] [-S] [-v] [-c cutoff] [-d rrggbb=Er] [-i factor] [-i prefix] [-t threads] [-r rate_multiplier] bitmapfile\fR
.br
.SH WARNING
This man page is not a complete set of documentation - the complexity of the atlc project makes man pages not an ideal way to document it, although out of completeness, man pages are produced. 
The best documentation that was current at the time the version was produced should be found on your
hard drive, usually at 
.br
/usr/local/share/atlc/docs/html\-docs/index.html 
.br
although it might be elsewhere if
your system administrator chose to install the package elsewhere. Sometimes, errors are corrected
in the documentation and placed at http://atlc.sourceforge.net/ before a new release of atlc is
released.  Please, if you notice a problem with the documentation - even spelling errors and typos,
please let me know. 

.SH DESCRIPTION
\fBatlc\fR is a finite difference program that is used to calculate the 
properties of a two-conductor electrical transmission line of arbitrary 
cross section. It is used whenever there are no analytical formula known, 
yet you still require an answer. It can calculate:
.br
   The impedance Zo  (in Ohms)
.br
   The capacitance per unit length (pF/m)
.br
   The inductance per unit length (nF/m)
.br
   The velocity of propagation v (m/s)
.br
   The velocity factor, v/c, which is dimensionless. 
.PP 
A bitmap file (usually with the extension .bmp or .BMP) is drawn in a graphics 
package such as \fBGimp\fR available from http://www.gimp.org. The bitmap 
file \fBmust\fR be saved as a 24-bit (16,777,216 colour) uncompqessed file. The 
colours used in the bitmap indicate whether the region is a conductor (pure 
red, pure green or pure blue) or a dielectric (anything else). Pure white 
is assumed to be a vacuum dielectric, but other colours have different meanings. 
See COLOURS below for precise definitions of the colours. 
.SH OPTIONS
\fB-C\fR
.br
print copyright, licensing and copying information. 
.br
\fB-s\fR
.br
Skip writing the Ex, Ey, E, V, U and Er bitmap (.bmp) files 
\fB-S\fR
.br
Skip writing the Ex, Ey, E, V, U and Er binary (.bin) files 
.br
\fB-v\fR
.br
makes the output more verbose/talkative.
.br
\fB-c cutoff\fR
.br
Sets the convergence criteria of the finite difference program. The
default is 0.0001, meaning two separate iterations must be within
01% for the program to stop iterating. Setting to a smaller positive
number gives more accuracy, but takes longer. 
.PP
\fB-d rrggbb=Er\fR
.br
is used to indicate the colour 0xrrggbb in the bitmap is used to
represent a material with permittivity Er. See also COLOURS below
.PP
\fB-i factor\fR
.br
is used to lighten or darken the .bmp electric field profile images
produced by atlc. Set factor > 2 to lighten or between 1 and 2 to
darken.
.PP
\fB-r ratemultiplier\fR
.br
Sets the parameter 'r' used internally when computing the voltage at a point w,h.
The default, which is (as of version 3.0.0) 1.95, results in what is believed to be
optimal results. Setting to 1.0 will avoid the use of the fast convergence method,
which is generally not a good idea. 
.PP
\fB-p prefix\fR
.br
Adds 'prefix', which is usually a directory name, in front of the output files.
.PP
.br
.PP
.br
.br
.br
.SH COLOURS
The 24-bitmaps that atlc uses have 8 bits assigned 
to represent the amount of red, 8 for blue and 8 for green. Hence there are 
256 levels of red, green and blue, making a total of 256*256*256=16777216 colours. 
Every one of the possible 16777216 colours can be defined precisely by the stating the exact amount 
of red, green and blue, as in:
.PP
.br
red         = 255,000,000 or 0xff0000
.br
green       = 000,255,000 or 0x00ff00
.br
blue        = 000,000,255 or 0x0000ff
.br
black       = 000,000,000 or 0x000000
.br
white       = 255,255,255 or 0xffffff
.br
Brown       = 255,000,255 or 0xff00ff 
.br
gray        = 142,142,142 or 0x8e8e8e
.PP
Some colours, such as pink, turquiose, sandy, brown, gray etc may mean slightly
different things to different people. This is not so with atlc, as the 
program expects the colours below to be exactly defined as given. Whether 
you feel the colour is sandy or yellow is up to you, but if you use it in 
your bitmap, then it either needs to be a colour reconised by atlc, \fBor\fR 
you \fBmust\fR define it with a command line option (see OPTIONS).
.br
red    = 255,000,000 or 0xFF0000 is the live conductor. 
.br
green  = 000,255,000 or 0x00FF00 is the grounded conductor. 
.br
blue   = 000,000,255 or 0x0000FF is the negative conductor 
.PP
All bitmaps \fBmust\fR have the live (red) and grounded (green) conductor. The blue
conductor is used to indicate a negative conductor, is needed when the program 
is used to analyse directional couplers. 
.PP
The following dielectrics are reconised by \fRatlc\fB:
.PP
.br
white     255,255,255 or 0xFFFFFF as Er=1.0    (vacuum)
.br
pink      255,202,202 or 0xFFCACA as Er=1.0006 (air)
.br
L. blue   130,052,255 or 0x8235EF as Er=2.1    (PTFE)
.br
Mid gray  142,242,142 or 0x8E8E8E as Er=2.2    (duroid 5880)
.br
mauve     255.000,255 or 0xFF00FF as Er=2.33  (polyethylene)
.br
yellow    255,255,000 or 0xFFFF00 as Er=2.5    (polystyrene)
.br
sandy     239,203,027 or 0xEFCC1A as Er=3.3    (PVC)
.br
brown     188,127,096 or 0xBC7F60 as Er=3.335  (epoxy resin)
.br
L. yellow 223,247,136 or 0xDFF788 as Er=3.7    (FR4 PCB)
.br
Turquoise 026,239,179 or 0x1AEFB3 as Er=4.8    (glass PCB)
.br
Dark gray 142,142,142 or 0x696969 as Er=6.15   (duroid 6006)
.br
L. gray   240,240,240 or 0xDCDCDC as Er=10.2  (duroid 6010)
.br
D. orange 213,160,067 or 0xD5A04D as Er=100.0 (mainly for test purposes)
.br
.br
.SH EXAMPLES
Here are a few examples of the use of atlc. Again, see the html documentation in atlc-X.Y.Z\docs\html-docs,
the documentation on your system (normally at /usr/local/share/atlc/docs/html\-docs/index.html ) or online
at http://atlc.sourceforge.net for examples.     
.PP
\fBex_1 % atlc coax2.bmp\fR
.br
This is a simple example (ex_1), in which the geometry of a transmission line is defined in coax2.bmp. In
this example, only the predefined dielectrics (Er =1.0, 1.0006, 2.1, 2.2, 2.33, 2.5, 3.3, 3.335, 3.7,
4.8, 6.15
or 10.2) could have been used in the bitmap, which would have been done with one of 13 different colours. white (0xFFFFFF) for Er=1.0, pink (0xFFCACA) for 1.0006 etc.
No other colour (dielectric) could have been used, since it was not
specified with the -d option. 
.br
.PP
\fBex_2 % atlc -d f9e77d=2.43 somefile.bmp \fR 
.br
In ex_2, a dielectric with Er=2.43 was wanted. A colour with the RGB values of 0xF9E7&d was
used. The -d option tells atlc what Er this colour refers to.
.br
.PP
\fBex_3 % atlc -v coax2.bmp\fR 
.br 
In ex_3, atlc has been instructed to print the results of intermediate calculations to stdout.
Normally, only the final result is printed. Using -vv even more information may be produced, but this
is really of only use to the developer of the project. 
.br
.SH FILES
bitmapfile.bmp
   Original bitmap file. Must be 24-bit colour uncompressed.
.br
bitmapfile.Ex.bmp
.br
   X-component of E-field as a bitmap. Red=+dV/dx, blue =-dV/dx
.br 
bitmapfile.Ey.bmp
   y-component of E-field as a bitmap. Red=+y, blue =-y
.br
bitmapfile.E.bmp
.br 
   E-field, as E=sqrt(Ex^2+Ey^2).
.br
bitmapfile.V.bin
.br 
   Voltage as a bitmap, red= positive, blue =negative.
.br
bitmapfile.Er.bin
.br
   Bitmap showing the permittivity as a grayscale. Lighter is a higher
   permittivity. 
.br 
bitmapfile.U.bmp
.br 
   Energy. 
.br
.P
In addition to the bitmaps, the data is also saved in binary files. 
.PP
All the saved binary files (.bin's) are saved as a double precision
number for each of the pixels. The first double is the top left, the
last the bottom right. If the original image has width W and height H,
the saved binary files will be W-1 by H-1. 
.PP
All the saved bitmap files are 24-bit uncompressed, just like the input
files. 
.
.SH SEE ALSO
atlc(1)
create_bmp_for_circ_in_circ(1)
create_bmp_for_circ_in_rect(1)
create_bmp_for_microstrip_coupler(1)
create_bmp_for_rect_cen_in_rect(1)
create_bmp_for_rect_cen_in_rect_coupler(1)
create_bmp_for_rect_in_circ(1)
create_bmp_for_rect_in_rect(1)
create_bmp_for_stripline_coupler(1)
create_bmp_for_symmetrical_stripline(1)
design_coupler(1)
find_optimal_dimensions_for_microstrip_coupler(1)
readbin(1)
.P 
.br
http://atlc.sourceforge.net                - Home page 
.br
http://sourceforge.net/projects/atlc       - Download area
.br
atlc-X.Y.Z/docs/html-docs/index.html       - HTML docs
.br
atlc-X.Y.Z/docs/qex-december-1996/atlc.pdf - theory paper
.br
atlc-X.Y.Z/examples                        - examples
.br
