.TH create_bmp_for_microstrip_coupler 1 "atlc-4.4.2 10th Sept 2003" "Dr. David Kirkby"
.ds n 5
.SH NAME
\fBcreate_bmp_for_microstrip_coupler\fR - bitmap generator for microstrip coupler (part of \fBatlc\fR)
.SH SYNOPSIS
\fBcreate_bmp_for_microstrip_coupler [-b bmp_size] [-v] w s g h t Er1 Er2 filename
.br
.SH WARNING
This man page is not a complete set of documentation - the complexity of the atlc project makes man pages not an ideal way to document it, although out of completeness, man pages are produced. 
The best documentation that was current at the time the version was produced should be found on your
hard drive, usually at 
.br
/usr/local/share/atlc/docs/html\-docs/index.html 
.br
although it might be elsewhere if
your system administrator chose to install the package elsewhere. Sometimes, errors are corrected
in the documentation and placed at http://atlc.sourceforge.net/ before a new release of atlc is
released.  Please, if you notice a problem with the documentation - even spelling errors and typos,
please let me know. 

.SH DESCRIPTION
\fBcreate_bmp_for_microstrip_coupler\fR is a pre-processor for \fBatlc\fR, part of atlc
properties of a two and three conductor electrical transmission line of arbitrary 
cross section. The program \fBcreate_bmp_for_microstrip_coupler\fR is used as a fast way of
generating bitmaps (there is no need to use a graphics program), for microstrip couplers. Hence if the dimensions of a
coupler are known the odd mode, even mode, differential mode and common mode impedances can be found. If you know what
impedances you require and want to find the dimentions, then use \fBfind_optimal_dimensions_for_microstrip_coupler\fR instead. This
makes repeated calls to  \fBcreate_bmp_for_microstrip_coupler\fR. The structure for which bitmaps are generated by
\fBcreate_bmp_for_microstrip_coupler\fR is shown below.
.P
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG  ^
.br
G                                                     G  |
.br
G                                                     G  |
.br
G                                                     G  |
.br
G                                                     G  |
.br
G                                                     G  |
.br
G                                                     G  |
.br
G |                                                   G  |
.br
G |                                                   G  |
.br
G |                                                   G  H
.br
G v       <--g--><--w--><---s---><--w--><--g-->       G  |
.br
GGGGGGGGGG       ccccccc         ccccccc       GGGGGGGG  |
.br
GGGGGGGGGG.......ccccccc.........ccccccc.......GGGGGGGG  |
.br
G.^.....................................^.............G  |
.br
G.|.....................................|.............G  |
.br
G.|t.Dielectric, permittivity=Er2.......h.............G  |
.br
G.|...(3.7 for FR4 PCB).................|.............G  |
.br
G.......................................V.............G  |
.br
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG  |
.br
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG. v
.br
<------------------------W---------------------------->


The parameters 'W' and 'H' and the inner dimensions of the a metal enclosure. These will generall be quite large compared to
the dimensions of the the PC - the diagram above is not to scale. 
The gap between the two coupled lines is s, the width of the coupled lines is w and the spacing between the edges of the
coupled lines and the groundplane on the top is g. Often, the upper groundplane is not close to the coupled lines, in which
case g will be quite large. The thickness of the dielectic is h. Note that he is just the dielectric, and does not include the
thichkness of the copper on the double-sided PCB. The thickness of copper on the top layer is t. It is immaterial what the
thickkness of the lower layer is. The relative permittivity above the dielectric is normally 1, but the relative permittivity
of the dielectric material will need to be either pre-defined or defined on the command lines. See the section colours below
for more information on dielectrics. 
.PP 
.br
The bitmap is printed to the file specified as the last argument
.P
.br
The bitmaps produced by \fBcreate_bmp_for_microstrip_coupler\fR are 24-bit bit colour bitmaps, as are required by \fBatlc\fR. 

The permittivities of the bitmap, set by 'Er1' and 'Er2', determine the
colours in the bitmap. If Er1 or Er2 is 1.0, 1.0006, 2.1, 2.2, 2.33, 2.5, 3.3,
3.335, 3.7, 4.8, 10.2 or 100, then the colour corresponding to that permittivity
will be set according to the colours defined in COLOURS below. If Er1
is not one of those permittivities, the region of permittivity Er1
will be set to the colour 0xCAFF00. If Er2 is not one of those values,
then the region of the image will be set to the colour 0xAC82AC. The
program \fBatlc\fR does not know what these two permittivites are, so they
\fBatlc\fR, must be told with the comand line option -d, as in example 4
below.
.P
.SH OPTIONS
\fb-C\fR
Causes \fBcreate_bmp_for_microstrip_coupler\fR to print copyright and licensing information.
\fB-b bitmapsize\fR
.br
is used to set the size of the bitmap, and so the accuracy to which atlc
is able to calculate the transmission line's properties. The default
value for 'bitmapsize' is normally 4, although this is set at compile
time. The value can be set anywhere from 1 to 15, but more than 8 is
probably not sensible. 
.PP
.P
\fB-v \fR
.br
Causes \fBcreate_bmp_for_microstrip_coupler\fR to print some data to stderr. Note, nothing
extra goes to standard output, as that is expected to be redirected to a
bitmap file.

.SH COLOURS
The 24-bit bitmaps that \fBatlc\fR expects, have 8 bits assigned 
to represent the amount of red, 8 for blue and 8 for green. Hence there are 
256 levels of red, green and blue, making a total of 256*256*256=16777216 colours. 
Every one of the possible 16777216 colours can be defined precisely by the stating the exact amount 
of red, green and blue, as in:
.PP
.br
red         = 255,000,000 or 0xff0000
.br
green       = 000,255,000 or 0x00ff00
.br
blue        = 000,000,255 or 0x0000ff
.br
black       = 000,000,000 or 0x000000
.br
white       = 255,255,255 or 0xffffff
.br
Brown       = 255,000,255 or 0xff00ff 
.br
gray        = 142,142,142 or 0x8e8e8e
.PP
Some colours, such as pink, turquoise, sandy, brown, gray etc may mean slightly
different things to different people. This is not so with \fBatlc\fR, as the 
program expects the colours below to be EXACTLY defined as given. Whether 
you feel the colour is sandy or yellow is up to you, but if you use it in 
your bitmap, then it either needs to be a colour recognised by atlc, \fBor\fR
you must define it with a command line option (see OPTIONS and example 5
below).
.br
red    = 255,000,000 or 0xFF0000 is the live conductor. 
.br
green  = 000,255,000 or 0x00FF00 is the grounded conductor. 
.br
blue   = 000,000,000 or 0x0000FF is the negative conductor 
.PP
All bitmaps \fBmust\fR have the live (red) and grounded (green) conductor. The blue
conductor is not currently supported, but it will be used to indicate a 
negative conductor, which will be needed if/when the program gets extended 
to analyse directional couplers. 
.PP
The following dielectrics are recognised by \fRatlc\fB and so are
produced by \fRcreate_bmp_for_rect_cen_in_rect\fB. 
.PP
.br
white     255,255,255 or 0xFFFFFF as Er=1.0    (vacuum)
.br
pink      255,202,202 or 0xFFCACA as Er=1.0006 (air)
.br
L. blue   130,052,255 or 0x8235EF as Er=2.1    (PTFE)
.br
Mid gray  142,242,142 or 0x8E8E8E as Er=2.2    (duroid 5880)
.br
mauve     255.000,255 or 0xFF00FF as Er=2.33  (polyethylene)
.br
yellow    255,255,000 or 0xFFFF00 as Er=2.5    (polystyrene)
.br
sandy     239,203,027 or 0xEFCC1A as Er=3.3    (PVC)
.br
brown     188,127,096 or 0xBC7F60 as Er=3.335  (epoxy resin)
.br
Turquoise 026,239,179 or 0x1AEFB3 as Er=4.8    (glass PCB)
.br
Dark gray 142,142,142 or 0x696969 as Er=6.15   (duroid 6006)
.br
L. gray   240,240,240 or 0xDCDCDC as Er=10.2  (duroid 6010)
.br
D. orange 213,160,067 or 0xD5A04D as Er=100.0 (mainly for test purposes)
.br
.br
.SH EXAMPLES
Here are a few examples of the use of \fBcreate_bmp_for_microstrip_coupler\fR. Again, see the html documentation in atlc-X.Y.Z/docs/html-docs/index.html for more examples.     
.P
In the first example, there is just an air dielectric, so Er1=Er2=1.0.
The inner of 1x1 inches (or mm, miles etc) is placed centrally in an
outer with dimensions 3 x 3 inches. 

The exact place where the dielectric starts (a) and its width (d) are
unimportant, but they must still be entered. 

\fB% create_bmp_for_microstrip_coupler 3 3 1 1 1 1 1 1 > ex1.bmp
.br
% atlc ex1.bmp\fR

In this second example, an inner of 15.0 mm x 0.5 mm is surrounded by an
outer with internal dimensions of 61.5 x 20.1 mm. There is a material
with permittivity 2.1 (Er of PTFE) below the inner conductor. The output
from \fBcreate_bmp_for_microstrip_coupler\fR is sent to a file ex1.bmp, which is then processed by
\fBatlc\fR 

\fB% create_bmp_for_microstrip_coupler 61.5 20.1 5 22 0.5 50 15 5 1.0 2.1 > ex2.bmp\fR
.br
\fB% atlc ex2.bmp\fR
.br

In example 3, the bitmap is made larger, to increase accuracy, but
otherwise this is identical to the second example. 
\fB% create_bmp_for_microstrip_coupler -b7 61.5 20.1 5 22 0.5 50 15 5 1.0 2.1 > ex3.bmp\fR
.br
\fB% atlc ex3.bmp\fR
.br
.P
In the fourth example, materials with permittivites 2.78 and 7.89 are
used. While there is no change in how to use \fBcreate_bmp_for_microstrip_coupler\fR, since
these permittivities are not known, we must tell \fBatlc\fR what they
are.
\fB
% create_bmp_for_microstrip_coupler 61 20 1 4 22 0.5 50 15 5 2.78 7.89 > ex5.bmp
% atlc -d CAFF00=2.78 -d AC82AC=7.89 ex5.bmp
\fR
In the sixth and final example, the -v option is used to print some
extra data to stderr from \fBcreate_bmp_for_microstrip_coupler\fR. 
.
.SH SEE ALSO
atlc(1)
create_bmp_for_circ_in_circ(1)
create_bmp_for_circ_in_rect(1)
create_bmp_for_rect_cen_in_rect(1)
create_bmp_for_rect_cen_in_rect_coupler(1)
create_bmp_for_rect_in_circ(1)
create_bmp_for_stripline_coupler(1)
create_bmp_for_symmetrical_stripline(1)
design_coupler(1)
find_optimal_dimensions_for_microstrip_coupler(1)
readbin(1)
.P 
.br
http://atlc.sourceforge.net                - Home page 
.br
http://sourceforge.net/projects/atlc       - Download area
.br
atlc-X.Y.Z/docs/html-docs/index.html       - HTML docs
.br
atlc-X.Y.Z/docs/qex-december-1996/atlc.pdf - theory paper
.br
atlc-X.Y.Z/examples                        - examples
.br
